{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","color","text","onclick","onClick","style","backgroundColor","className","defaultProps","protoTypes","PropTypes","string","func","isRequired","Header","title","onAdd","showAdd","Button","Task","tasks","onDelete","onToggle","map","task","id","AddTask","useState","setText","day","setDay","reminder","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","console","log","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.516a7ec7.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nfunction Buttons({color, text, onclick}) {\r\n    return(\r\n        <button \r\n            onClick={onclick}\r\n            style={{backgroundColor: color}} \r\n            className='btn'\r\n        >\r\n            { text }\r\n        </button>\r\n    )\r\n}\r\n\r\nButtons.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButtons.protoTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onclick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Buttons\r\n","import PropTypes from 'prop-types'\r\nimport Buttons from \"./Button\";\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Buttons\r\n                color={showAdd ? 'red' : 'green'} \r\n                text={showAdd ? 'Close' : 'Add'} \r\n                onClick={onAdd}\r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.protoTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import GetTask from './GetTask'\r\n\r\nconst Task = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => {\r\n               <GetTask \r\n                    key={task.id} task={task}\r\n                    onDelete = {onDelete}\r\n                    onToggle = {onToggle}\r\n                />   \r\n            })} \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(!text){\r\n            alert('Please Add Task')\r\n            return;\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Add Task'\r\n                    value ={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Date $ Time</label>\r\n                <input\r\n                    type='text' \r\n                    placeholder='Add Date and time'\r\n                    value ={day}\r\n                    onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input \r\n                    type='checkbox'\r\n                    checked={reminder}\r\n                    value={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <input type='submit' value='save Task'\r\n            className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Task\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'School Meeting',\n        day: 'Feb 6th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Lauch with Mom',\n        day: 'Feb 10th at 12:30pm',\n        reminder: true,\n    }\n  ]);\n\n  // Add Task\n  const addTask = (task) => {\n    console.log('object');\n    const id = Math.floor(Math.random()*10000)+1;\n    const newTask = {id, ...task};\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    console.log('delete', id);\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) => \n        task.id === id ? { ...task, reminder : !task.reminder } : task \n    ))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header \n        onAdd={() => setShowAddTask(!showAddTask)} title={\"Task Tracker\"} \n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {\n        tasks.length > 0 ? \n        (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>) \n        : \n        ('No Tasks To Show')\n      }\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}